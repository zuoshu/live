apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "com.coco2dx.org"
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"

        multiDexEnabled = true
    }

    sourceSets.main {
        java.srcDir "src"
        res.srcDir "res"
        jniLibs.srcDir "libs"
        manifest.srcFile "AndroidManifest.xml"
        assets.srcDir "assets"
    }


    signingConfigs {
        debug {
            keyAlias 'iqingiqing'
            keyPassword 'iqingiqing'
            storePassword 'iqingiqing'
            storeFile file('key/iqingiqing.jks')
        }

        release {
            keyAlias 'iqingiqing'
            keyPassword 'iqingiqing'
            storePassword 'iqingiqing'
            storeFile file('key/iqingiqing.jks')
        }
    }

    buildTypes {
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            versionNameSuffix "-debug"
//            minifyEnabled false
//            zipAlignEnabled false
//            shrinkResources false
        }
        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            signingConfig signingConfigs.release
//            minifyEnabled true
//            zipAlignEnabled true
//            shrinkResources true
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(':libcocos2dx')
    compile 'com.android.support:design:23.0.1'
    compile 'com.android.support:appcompat-v7:23.0.1'
    compile 'com.jakewharton:butterknife:7.0.1'
    compile files('libs/ExKsoap2-1.0.1.6.jar')
    compile files('libs/joda-time-2.9.1.jar')
    compile files('libs/ksoap2-android-assembly-3.6.1-jar-with-dependencies.jar')
}

task cleanAssets(type: Delete) {
    delete 'assets'
}
task copyAssets(type: Copy) {
    from '../../Resources'
    into 'assets'
}

clean.dependsOn cleanAssets
preBuild.dependsOn copyAssets
