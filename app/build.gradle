apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        versionCode 1
        versionName "1.0"

        applicationId "com.oneguy.live"

        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion

        multiDexEnabled = true
    }

    sourceSets.main {
        java.srcDir "src"
        res.srcDir "res"
        jniLibs.srcDir "libs"
        manifest.srcFile "AndroidManifest.xml"
        assets.srcDir "assets"
    }

    signingConfigs {
        debug {
            keyAlias 'iqingiqing'
            keyPassword 'iqingiqing'
            storePassword 'iqingiqing'
            storeFile file('key/iqingiqing.jks')
        }

        release {
            keyAlias 'iqingiqing'
            keyPassword 'iqingiqing'
            storePassword 'iqingiqing'
            storeFile file('key/iqingiqing.jks')
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }

        release {
            minifyEnabled true
            shrinkResources true
            proguardFile 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    packagingOptions {
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE.txt'
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(':libcocos2dx')
    compile supportDependencies.design
    compile supportDependencies.appCompat
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'com.alibaba:fastjson:+'
    compile 'com.squareup.picasso:picasso:+'
    compile 'com.makeramen:roundedimageview:2.1.0'
}

task cleanAssets(type: Delete) {
    delete 'assets'
}
task copyAssets(type: Copy) {
    from '../../Resources'
    into 'assets'
}

clean.dependsOn cleanAssets
preBuild.dependsOn copyAssets
